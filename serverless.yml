# NOTE: update this with your service name
service: gql-project

# Use the serverless-webpack plugin to transpile ES6
plugins:
    - serverless-webpack
    - serverless-dynamodb-local
    - serverless-offline

# serverless-webpack configuration
# Enable auto-packing of external modules
custom:
    webpack:
        webpackConfig: ./webpack.config.js
        includeModules: true
        packager: 'npm'
    dynamodb:
        start:
            port: 8000
            inMemory: true
            migrate: true
            seed: true
        seed:
            test:
                sources:
                    - table: ${self:provider.environment.RATINGS_TABLE}
                      sources: [./tests/fake-ratings.json]

package:
    individually: true

provider:
    name: aws
    runtime: nodejs8.10
    stage: dev
    region: us-east-1
    # To load environment variables externally
    # rename env.example to env.yml and uncomment
    # the following line. Also, make sure to not
    # commit your env.yml.
    #
    environment: ${file(env.yml)}

functions:
    graphql:
        handler: graphql.handler
        events:
            - http:
                  path: graphql
                  method: any

resources:
    Resources:
        RatingsDbTable:
            Type: 'AWS::DynamoDB::Table'
            DeletionPolicy: Retain
            Properties:
                AttributeDefinitions:
                    - AttributeName: id
                      AttributeType: S
                    - AttributeName: beerId
                      AttributeType: N
                KeySchema:
                    - AttributeName: id
                      KeyType: HASH
                    - AttributeName: beerId
                      KeyType: RANGE
                ProvisionedThroughput:
                    ReadCapacityUnits: 1
                    WriteCapacityUnits: 1
                TableName: ${self:provider.environment.RATINGS_TABLE}
                GlobalSecondaryIndexes:
                    - IndexName: beer-index
                      KeySchema:
                          - AttributeName: beerId
                            KeyType: HASH
                      Projection:
                          ProjectionType: ALL
                      ProvisionedThroughput:
                          ReadCapacityUnits: 1
                          WriteCapacityUnits: 1
